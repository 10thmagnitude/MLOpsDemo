parameters:
  AzureSubscription: ''
  JobContainer: ''
  Environment: ''
  RGName: ''
  Location: ''
  WorkspaceName: ''
  ContainerName: ''
  DataFolder: ''
  PublishPath: ''
  TrainSteps: []

jobs:
- deployment: trainModel
  displayName: Train Model
  pool:
    vmImage: ubuntu-latest
  container: ${{ parameters.JobContainer }}
  environment:
    ${{ parameters.Environment }}
  strategy:
    runOnce:
      deploy:
        steps:
        - checkout: self   # get config files in repo

        - task: AzureCLI@2
          displayName: Upload training data
          inputs:
            azureSubscription: $(AzureSubscription)
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: |
              echo "Uploading training data"
              dataStoreName=$(az ml datastore show-default -w $WORKSPACE -g $RG --query name -o tsv)
              az ml datastore upload -w $WORKSPACE -g $RG -n $dataStoreName -p $DATAFOLDER -u $CONTAINER --overwrite true
              
              # create a variable with the datastoreName for subsequent tasks
              echo "##vso[task.setvariable variable=DataStoreName;]$dataStoreName"
          env:
            RG: ${{ parametes.RGName }}
            LOCATION: ${{ parametes.Location }}
            WORKSPACE: ${{ parametes.WorkspaceName }}
            CONTAINER: ${{ parametes.ContainerName }}
            DATAFOLDER: ${{ parametes.DataFolder }}
        
        # inject training steps
        - ${{ parameters.TrainSteps }}
          
        - task: PublishPipelineArtifact@1
          displayName: Publish Artifact
          inputs:
            targetPath: ${{ parameters.PublishPath }}
            ArtifactName: model