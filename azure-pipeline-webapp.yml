name: 1.0.0$(Rev:.r)

trigger:
  paths:
    include:
    - webapp

variables:
  AzureSubscription: 10M Client Demo
  RGName: cd-mlops
  Location: westus2
  WebAppName: cd-diabetes
  SKU: B1
  WorkspaceName: cdmlops
  ServiceName: diabetes-aci
  CreatedBy: colin

stages:
- stage: build
  displayName: Build website
  jobs:
    job: build
    displayName: Compile and Package
    pool:
      vmImage: ubuntu-latest
    steps:
      - checkout: self

      - task: colinsalmcorner.colinsalmcorner-buildtasks.version-assemblies-task.VersionAssemblies@2
        displayName: Version Assemblies using **\AssemblyInfo.*
        inputs:
          sourcePath: PartsUnlimited-aspnet45/src/PartsUnlimitedWebsite
      
      - task: DotNetCoreCLI@2
        displayName: dotnet build
        inputs:
          command: build
          projects: '**/*.csproj'
          arguments: '--configuration Release'
      
      - task: DotNetCoreCLI@2
        displayName: dotnet publish
        inputs:
          command: publish
          publishWebProjects: True
          arguments: '--configuration Release --output $(Pipeline.Workspace)/site'
          zipAfterPublish: True
      
      - task: PublishPipelineArtifact@1
        displayName: Publish Artifact
        inputs:
          targetPath: $(Pipeline.Workspace)/site
          ArtifactName: drop

- stage: provisionInfra
  displayName: Provision Infrastructure
  dependsOn: build
  jobs:
  - deployment: provisionInfra
    displayName: Provision Azure PaaS Infra
    pool:
      vmImage: ubuntu-latest
    environment:
      MLOps-Dev
    variables:
      EnvironmentName: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: site

          - task: AzureCLI@2
            displayName: Create Azure Web App
            inputs:
              azureSubscription: $(AzureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                echo "Creating resource group $RG in $LOCATION"
                az group create --name $RG -l $LOCATION --tags createdBy=$CREATEDBY purpose=demo

                echo "Creating app service plan"
                az appservice plan create -n $APPNAME-$ENVNAME-plan -g $RG -l $LOCATION --sku $SKU

                echo "Creating app service"
                az webapp create -n $APPNAME-$ENVNAME -p $APPNAME-$ENVNAME-plan -g $RG
            env:
              RG: $(RGName)
              LOCATION: $(Location)
              CREATEDBY: $(CreatedBy)
              SKU: $(Sku)
              APPNAME: $(cd-diabetes)
              ENVNAME: $(EnvironmentName)
          
          - task: AzureCLI@2
            displayName: Install az ml extension
            inputs:
              azureSubscription: $(AzureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                echo "Installing ml extension for az"
                az extension add --name azure-cli-ml
          
          - task: AzureCLI@2
            displayName: Get ML service URI
            inputs:
              azureSubscription: $(AzureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                serviceUri=$(az ml service show -g $RG -w $WORKSPACE  -n $SERVICENAME --query scoringUri -o tsv)
                echo "##vso[task.setvariable variable=PredictionAPI.BaseURI;]$serviceUri"
            env:
              RG: $(RGName)
              WORKSPACE: $(WorkspaceName)
              SERVICENAME: $(ServiceName)
          
          - task: AzureRmWebAppDeployment@4
            displayName: Deploy Web App
            inputs:
              ConnectionType: AzureRM
              azureSubscription: $(AzureSubscription)
              appType: webApp
              WebAppName: $(WebAppName)
              packageForLinux: '$(Pipeline.Workspace)/site/*.zip'
              JSONFiles: 'appsettings.json'
          

