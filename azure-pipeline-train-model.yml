name: 1.0.0$(Rev:.r)

trigger:
  paths:
    exclude:
    - webapp/*
    - automl/*
    - azure-pipeline-webapp.yml
    - azure-pipeline-automl.yml

resources:
  containers:
  - container: mlops
    image: build/mlops:latest
    endpoint: cdk8spu-reg

variables:
  AzureSubscription: 10M Client Demo
  RGName: cd-mlops
  Location: westus2
  WorkspaceName: cdmlops
  ExperimentName: diabetes
  ClusterName: cdmlops
  ContainerName: diabetesdata
  DataFileName: diabetes_pima.csv
  TrainingScript: train_pima_model.py
  ModelName: diabetesmodel
  CreatedBy: colin

stages:
- stage: provisionWorkspace
  displayName: Provision Workspace
  jobs:
  - template: templates/job-provision-workspace.yml
    parameters:
      Environment: 'MLOps-Dev'
      RunContainer: mlops
      AzureSubscription: $(AzureSubscription)
      RGName: $(RGName)
      Location: $(Location)
      WorkspaceName: $(WorkspaceName)
      ClusterName: $(ClusterName)
      MinNodes: 0
      MaxNodes: 2
      VMSize: Standard_DS2_V2
      IdleSecondsBeforeScaleDown: 300
      CreatedBy: $(CreatedBy)

- stage: trainModel
  dependsOn: provisionWorkspace
  displayName: Train Model
  jobs:
  - template: templates/job-train-model.yml
    parameters:
      AzureSubscription: 10M Client Demo
      JobContainer: mlops
      Environment: Workspace
      RGName: $(RGName)
      Location: $(Location)
      WorkspaceName: $(WorkspaceName)
      ContainerName: $(ContainerName)
      DataFolder: data
      PublishPath: $(Pipeline.Workspace)/training
      TrainSteps:
      - task: AzureCLI@2
        displayName: Train model
        inputs:
          azureSubscription: $(AzureSubscription)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            # create folders for artifacts
            echo "Creating output folders $ROOTFOLDER/models and /metadata"
            mkdir $ROOTFOLDER/models -p && mkdir $ROOTFOLDER/metadata -p

            # train model (basic)
            rm -f metadata/run.json
            echo "Training model using experiment $EXPERIMENT and script $TRAININGSCRIPT"
            az ml run submit-script -g $RG -w $WORKSPACE -e $EXPERIMENT --ct $CLUSTER \
                -d training/conda_dependencies.yml --path training -c train_basic \
                -t $ROOTFOLDER/metadata/run.json $TRAININGSCRIPT \
                --data_store $DATASTORENAME --data_container $CONTAINER --training_file $DATAFILENAME
            
            ls -la $ROOTFOLDER/metadata
        env:
          RG: $(RGName)
          CLUSTER: $(ClusterName)
          WORKSPACE: $(WorkspaceName)
          CONTAINER: $(ContainerName)
          EXPERIMENT: $(ExperimentName)
          DATASTORENAME: $(DataStoreName)
          TRAININGSCRIPT: $(TrainingScript)
          DATAFILENAME: $(DataFileName)
          ROOTFOLDER: $(Pipeline.Workspace)/training

      - task: AzureCLI@2
        displayName: Register and download model
        inputs:
          azureSubscription: $(AzureSubscription)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            # register model
            echo "Registering model $MODELNAME"
            az ml model register -g $RG -w $WORKSPACE -n $MODELNAME -f $ROOTFOLDER/metadata/run.json \
                --asset-path outputs/models/sklearn_diabetes_model.pkl \
                -d "Basic Linear model using diabetes dataset" \
                --model-framework ScikitLearn -t $ROOTFOLDER/metadata/model.json \
                --tag data=diabetes \
                --tag model=regression \
                --tag type=basic \
                --tag build=$BUILDNUMBER

            # download model
            modelId=$(jq -r .modelId $ROOTFOLDER/metadata/model.json)
            az ml model download -g $RG -w $WORKSPACE -i $modelId -t $ROOTFOLDER/models --overwrite
        env:
          RG: $(RGName)
          WORKSPACE: $(WorkspaceName)
          MODELNAME: $(ModelName)
          BUILDNUMBER: $(Build.BuildNumber)
          ROOTFOLDER: $(Pipeline.Workspace)/training

- stage: devDeployModel
  dependsOn: trainModel
  displayName: Deploy Model to DEV
  jobs:
  - template: templates/job-deploy-model.yml
    parameters:
      AzureSubscription: $(AzureSubscription)
      Environment: MLOps-Dev
      EnvironmentName: DEV
      JobContainer: mlops
      RGName: $(RGName)
      Location: $(Location)
      WorkspaceName: $(WorkspaceName)
      ServiceName: 'diabetes-aci'
          
- stage: prodDeployModel
  dependsOn: devDeployModel
  displayName: Deploy Model to PROD
  jobs:
  - template: templates/job-deploy-model.yml
    parameters:
      AzureSubscription: $(AzureSubscription)
      Environment: MLOps-PROD
      EnvironmentName: PROD
      JobContainer: mlops
      RGName: $(RGName)
      Location: $(Location)
      WorkspaceName: $(WorkspaceName)
      ServiceName: 'diabetes-aks'
      AKSClusterName: 'cd-mlcluster'

  